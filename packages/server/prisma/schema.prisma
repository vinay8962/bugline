generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String        @id @default(uuid())
  email           String        @unique
  password_hash   String?
  full_name       String
  google_id       String?       @unique
  profile_picture String?
  phone           String?
  bio             String?
  location        String?
  timezone        String?       @default("America/Los_Angeles")
  global_role     String        @default("USER")
  created_at      DateTime      @default(now())
  email_verified  Boolean       @default(false)
  is_verified     Boolean       @default(false)
  assigned_bugs   Bug[]         @relation("AssignedBugs")
  company_users   CompanyUser[]

  @@map("users")
}

model Company {
  id            String        @id @default(uuid())
  name          String
  slug          String        @unique
  created_at    DateTime      @default(now())
  company_users CompanyUser[]
  projects      Project[]

  @@map("companies")
}

model CompanyUser {
  id         String   @id @default(uuid())
  user_id    String
  company_id String
  role       String
  created_at DateTime @default(now())
  company    Company  @relation(fields: [company_id], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, company_id])
  @@map("company_users")
}

model Project {
  id              String   @id @default(uuid())
  company_id      String
  name            String
  slug            String
  project_token   String?  @unique
  allowed_domains Json?    @default("[]")
  widget_settings Json?    @default("{}")
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now()) @updatedAt
  bugs            Bug[]
  company         Company  @relation(fields: [company_id], references: [id], onDelete: Cascade)

  @@unique([company_id, slug])
  @@map("projects")
}

model Bug {
  id             String   @id @default(uuid())
  project_id     String
  title          String
  description    String
  status         String   @default("open")
  priority       String   @default("medium")
  reporter_email String?
  assigned_to    String?
  error_details  Json?    // Stack trace, error type, filename, line number for widget bugs
  environment    Json?    // User agent, URL, browser info for widget bugs
  source         String   @default("manual") // manual, widget, api
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now()) @updatedAt
  assignee       User?    @relation("AssignedBugs", fields: [assigned_to], references: [id])
  project        Project  @relation(fields: [project_id], references: [id], onDelete: Cascade)

  @@map("bugs")
}
